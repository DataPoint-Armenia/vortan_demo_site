{"version":3,"sources":["components/Header.jsx","components/Results.jsx","components/InputForm.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","Brand","Results","results","React","useContext","ResultsContext","style","padding","Table","striped","bordered","hover","map","result","index","term","distance","score","createContext","InputForm","useState","input","getResults","setResults","Form","onSubmit","event","preventDefault","inputDict","fetch","method","headers","body","JSON","stringify","then","response","json","x","suggest","Group","Label","Control","type","placeholder","onChange","target","value","bind","Text","className","Button","variant","Provider","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAaeA,EAVA,WACX,OACI,mCACI,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAX,SACI,cAACD,EAAA,EAAOE,MAAR,0B,+BCHD,SAASC,IACpB,IAAQC,EAAYC,IAAMC,WAAWC,GAA7BH,QAMR,OACI,qBAAKI,MALK,CACVC,QAAS,OAIT,SACI,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACI,gCACI,+BACI,yCACA,0CACA,4CAGR,gCACCT,EAAQU,KAAI,SAACC,EAAQC,GAAT,OACT,+BACI,6BAAKD,EAAOE,OACZ,6BAAKF,EAAOG,WACZ,6BAAKH,EAAOI,UAHPH,a,IChBhBT,EAAiBF,IAAMe,cAAc,CAAEhB,QAAS,KAmD9CiB,EAjDG,WACd,MAA4BhB,IAAMiB,SAAS,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BnB,IAAMiB,SAAS,IAA7C,mBAAOlB,EAAP,KAAgBqB,EAAhB,KA0BA,OACI,qCACI,eAACC,EAAA,EAAD,CAAMlB,MALA,CACVC,QAAS,OAIekB,SAtBP,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAY,CAChB,KAAQP,GAGVQ,MAAM,oCAAqC,CACvCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,mCAC3BC,KAAMC,KAAKC,UAAUN,KACtBO,MAAK,SAAAC,GACJA,EAASC,OAAOF,MAAK,SAACG,GAClBf,EAAWe,EAAEC,gBAUjB,UACI,eAACf,EAAA,EAAKgB,MAAN,WACI,cAAChB,EAAA,EAAKiB,MAAN,yBACA,cAACjB,EAAA,EAAKkB,QAAN,CAAcC,KAAK,OAAOC,YAAY,iCAAQC,SA7B1C,SAAAnB,GAChBJ,EAAWI,EAAMoB,OAAOC,QA4BwDC,K,aACpE,cAACxB,EAAA,EAAKyB,KAAN,CAAWC,UAAU,aAArB,mDAIJ,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUT,KAAK,SAA/B,uBAIJ,cAACtC,EAAegD,SAAhB,CAAyBN,MAAO,CAAC7C,WAAjC,SACI,cAACD,EAAD,UCrCDqD,EAZF,WAKT,OACI,qBAAKhD,MALK,CACZ,OAAU,MACV,SAAY,SAGV,SACI,cAAC,EAAD,OCIGiD,MATf,WACE,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,QCGKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.78219946.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from 'react-bootstrap/Navbar';\n\nconst Header = () => {\n    return (\n        <>\n            <Navbar bg=\"light\">\n                <Navbar.Brand>Vortan</Navbar.Brand>\n            </Navbar>\n        </>\n    );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport { ResultsContext } from \"./InputForm\";\n\nexport default function Results() {\n    const { results } = React.useContext(ResultsContext)\n\n    const style = {\n        padding: \"1em\",\n    };\n\n    return (\n        <div style={style}>\n            <Table striped bordered hover>\n                <thead>\n                    <tr>\n                        <th>Suggest</th>\n                        <th>Distance</th>\n                        <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                {results.map((result, index) => (\n                    <tr key={index}>\n                        <td>{result.term}</td>\n                        <td>{result.distance}</td>\n                        <td>{result.score}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\n","import React from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\n\nimport Results from \"./Results\"\n\nexport const ResultsContext = React.createContext({ results: []})\n\nconst InputForm = () => {\n    const [input, getResults] = React.useState(\"\")\n    const [results, setResults] = React.useState([])\n\n    const handleInput = event  => {\n        getResults(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const inputDict = {\n          \"word\": input\n        }\n\n        fetch(\"http://http://45.79.68.92/suggest\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json; charset=UTF-8\" },\n            body: JSON.stringify(inputDict)\n        }).then(response => {\n            response.json().then((x) => {\n                setResults(x.suggest)\n            });\n        })\n    }\n\n    const style = {\n        padding: \"1em\",\n    };\n    return (\n        <>\n            <Form style={style} onSubmit={handleSubmit}>\n                <Form.Group>\n                    <Form.Label>Input Term</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"տպրոց\" onChange={handleInput.bind(this)} />\n                    <Form.Text className=\"text-muted\">\n                        Only supports single words for now\n                    </Form.Text>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n            <ResultsContext.Provider value={{results}}>\n                <Results />\n            </ ResultsContext.Provider>\n        </>\n    );\n};\n\nexport default InputForm;\n","import React from \"react\";\nimport InputForm from \"./InputForm\"\n\nconst Main = () => {\n    const style = {\n      \"margin\": \"1em\",\n      \"maxWidth\": \"400px\",\n    };\n    return (\n        <div style={style}>\n            <InputForm />\n        </div>\n    );\n};\n\nexport default Main;\n","import './App.css';\n\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n      <>\n          <Header />\n          <Main />\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}